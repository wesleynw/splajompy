// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package queries

import (
	"github.com/jackc/pgx/v5/pgtype"
	db "splajompy.com/api/v2/internal/db"
)

type Bio struct {
	ID     int    `json:"id"`
	UserID int    `json:"userId"`
	Text   string `json:"text"`
}

type Block struct {
	ID           int              `json:"id"`
	UserID       int              `json:"userId"`
	TargetUserID int              `json:"targetUserId"`
	CreatedAt    pgtype.Timestamp `json:"createdAt"`
}

type Comment struct {
	CommentID int              `json:"commentId"`
	PostID    int              `json:"postId"`
	UserID    int              `json:"userId"`
	Text      string           `json:"text"`
	Facets    db.Facets        `json:"facets"`
	CreatedAt pgtype.Timestamp `json:"createdAt"`
}

type Follow struct {
	FollowerID  int              `json:"followerId"`
	FollowingID int              `json:"followingId"`
	CreatedAt   pgtype.Timestamp `json:"createdAt"`
}

type Image struct {
	ImageID      int    `json:"imageId"`
	PostID       int    `json:"postId"`
	Height       int    `json:"height"`
	Width        int    `json:"width"`
	ImageBlobUrl string `json:"imageBlobUrl"`
	DisplayOrder int    `json:"displayOrder"`
}

type Like struct {
	PostID    int  `json:"postId"`
	CommentID *int `json:"commentId"`
	UserID    int  `json:"userId"`
}

type Notification struct {
	NotificationID   int              `json:"notificationId"`
	UserID           int              `json:"userId"`
	PostID           *int             `json:"postId"`
	CommentID        *int             `json:"commentId"`
	TargetUserID     *int             `json:"targetUserId"`
	Message          string           `json:"message"`
	Link             pgtype.Text      `json:"link"`
	Viewed           bool             `json:"viewed"`
	Facets           db.Facets        `json:"facets"`
	NotificationType string           `json:"notificationType"`
	CreatedAt        pgtype.Timestamp `json:"createdAt"`
}

type PollVote struct {
	ID          int              `json:"id"`
	PostID      int              `json:"postId"`
	UserID      int              `json:"userId"`
	OptionIndex int              `json:"optionIndex"`
	CreatedAt   pgtype.Timestamp `json:"createdAt"`
}

type Post struct {
	PostID     int              `json:"postId"`
	UserID     int              `json:"userId"`
	Text       pgtype.Text      `json:"text"`
	CreatedAt  pgtype.Timestamp `json:"createdAt"`
	Facets     db.Facets        `json:"facets"`
	Attributes *db.Attributes   `json:"attributes"`
}

type Session struct {
	ID        string           `json:"id"`
	UserID    int              `json:"userId"`
	ExpiresAt pgtype.Timestamp `json:"expiresAt"`
}

type User struct {
	UserID       int              `json:"userId"`
	Email        string           `json:"email"`
	Password     string           `json:"password"`
	Username     string           `json:"username"`
	CreatedAt    pgtype.Timestamp `json:"createdAt"`
	Name         pgtype.Text      `json:"name"`
	PinnedPostID *int             `json:"pinnedPostId"`
}

type VerificationCode struct {
	ID        int              `json:"id"`
	Code      string           `json:"code"`
	UserID    int              `json:"userId"`
	ExpiresAt pgtype.Timestamp `json:"expiresAt"`
}
