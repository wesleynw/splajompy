// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package queries

import (
	"context"
)

type Querier interface {
	AddCommentToPost(ctx context.Context, arg AddCommentToPostParams) (Comment, error)
	AddLike(ctx context.Context, arg AddLikeParams) error
	BlockUser(ctx context.Context, arg BlockUserParams) error
	CreateSession(ctx context.Context, arg CreateSessionParams) error
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	CreateVerificationCode(ctx context.Context, arg CreateVerificationCodeParams) error
	DeleteFollow(ctx context.Context, arg DeleteFollowParams) error
	DeletePost(ctx context.Context, postID int32) error
	DeleteSession(ctx context.Context, id string) error
	GetAllPostIds(ctx context.Context, arg GetAllPostIdsParams) ([]int32, error)
	GetBioByUserId(ctx context.Context, userID int32) (string, error)
	GetCommentById(ctx context.Context, commentID int32) (Comment, error)
	GetCommentCountByPostID(ctx context.Context, postID int32) (int64, error)
	GetCommentsByPostId(ctx context.Context, postID int32) ([]GetCommentsByPostIdRow, error)
	GetImagesByPostId(ctx context.Context, postID int32) ([]Image, error)
	GetIsEmailInUse(ctx context.Context, email string) (bool, error)
	GetIsLikedByUser(ctx context.Context, arg GetIsLikedByUserParams) (bool, error)
	GetIsPostLikedByUser(ctx context.Context, arg GetIsPostLikedByUserParams) (bool, error)
	GetIsUserBlockingUser(ctx context.Context, arg GetIsUserBlockingUserParams) (bool, error)
	GetIsUserFollowingUser(ctx context.Context, arg GetIsUserFollowingUserParams) (bool, error)
	GetIsUsernameInUse(ctx context.Context, username string) (bool, error)
	GetNotificationById(ctx context.Context, notificationID int32) (Notification, error)
	GetNotificationsForUserId(ctx context.Context, arg GetNotificationsForUserIdParams) ([]Notification, error)
	GetPostById(ctx context.Context, postID int32) (Post, error)
	GetPostIdsByFollowing(ctx context.Context, arg GetPostIdsByFollowingParams) ([]int32, error)
	GetPostLikesFromFollowers(ctx context.Context, arg GetPostLikesFromFollowersParams) ([]GetPostLikesFromFollowersRow, error)
	GetPostsIdsByUserId(ctx context.Context, arg GetPostsIdsByUserIdParams) ([]int32, error)
	GetSessionById(ctx context.Context, id string) (Session, error)
	GetUserById(ctx context.Context, userID int32) (GetUserByIdRow, error)
	GetUserByIdentifier(ctx context.Context, email string) (GetUserByIdentifierRow, error)
	GetUserByUsername(ctx context.Context, username string) (GetUserByUsernameRow, error)
	GetUserUnreadNotificationCount(ctx context.Context, userID int32) (int64, error)
	GetUserWithPasswordById(ctx context.Context, userID int32) (User, error)
	GetUserWithPasswordByIdentifier(ctx context.Context, email string) (User, error)
	GetUsernameLike(ctx context.Context, arg GetUsernameLikeParams) ([]User, error)
	GetVerificationCode(ctx context.Context, arg GetVerificationCodeParams) (VerificationCode, error)
	HasLikesFromOthers(ctx context.Context, arg HasLikesFromOthersParams) (bool, error)
	InsertFollow(ctx context.Context, arg InsertFollowParams) error
	InsertImage(ctx context.Context, arg InsertImageParams) (Image, error)
	InsertNotification(ctx context.Context, arg InsertNotificationParams) error
	InsertPost(ctx context.Context, arg InsertPostParams) (Post, error)
	MarkAllNotificationsAsReadForUser(ctx context.Context, userID int32) error
	MarkNotificationAsReadById(ctx context.Context, notificationID int32) error
	RemoveLike(ctx context.Context, arg RemoveLikeParams) error
	UnblockUser(ctx context.Context, arg UnblockUserParams) error
	UpdateUserBio(ctx context.Context, arg UpdateUserBioParams) error
	UpdateUserName(ctx context.Context, arg UpdateUserNameParams) error
	UserHasUnreadNotifications(ctx context.Context, userID int32) (bool, error)
}

var _ Querier = (*Queries)(nil)
