// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package db

import (
	"context"
)

const getImagesByPostId = `-- name: GetImagesByPostId :many
SELECT image_id, post_id, height, width, image_blob_url, display_order
FROM images
WHERE images.post_id = $1
ORDER BY display_order ASC
`

func (q *Queries) GetImagesByPostId(ctx context.Context, postID int32) ([]Image, error) {
	rows, err := q.db.Query(ctx, getImagesByPostId, postID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Image
	for rows.Next() {
		var i Image
		if err := rows.Scan(
			&i.ImageID,
			&i.PostID,
			&i.Height,
			&i.Width,
			&i.ImageBlobUrl,
			&i.DisplayOrder,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getPostById = `-- name: GetPostById :one
SELECT post_id, user_id, text, created_at
FROM posts
WHERE post_id = $1
`

func (q *Queries) GetPostById(ctx context.Context, postID int32) (Post, error) {
	row := q.db.QueryRow(ctx, getPostById, postID)
	var i Post
	err := row.Scan(
		&i.PostID,
		&i.UserID,
		&i.Text,
		&i.CreatedAt,
	)
	return i, err
}
